# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_publish:
    runs-on: windows-latest  # Usa una máquina Windows Server proporcionada por GitHub

    steps:
    - uses: actions/checkout@v4 
    
    - name: Extract AssemblyVersion and Set FULL_VERSION
      id: version-extractor
      shell: cmd
      run: |
        @echo off
        setlocal enabledelayedexpansion
        
        REM Extraer AssemblyVersion usando PowerShell tradicional (powershell.exe)
        for /f "delims=" %%i in ('powershell.exe -command "(Select-String -Path './TaskManagerAPI.csproj' -Pattern '<AssemblyVersion>(.*?)</AssemblyVersion>').Matches.Groups[1].Value"') do (
          set ASSEMBLY_VERSION=%%i
          echo Extracted AssemblyVersion: !ASSEMBLY_VERSION!
        )
        
        if not defined ASSEMBLY_VERSION (
          echo ::error::Could not extract AssemblyVersion from csproj file
          exit /b 1
        )
        
        REM Combinar con GITHUB_RUN_NUMBER
        set FULL_VERSION=!ASSEMBLY_VERSION!.%GITHUB_RUN_NUMBER%
        echo Generated FULL_VERSION: !FULL_VERSION!
        
        REM Establecer variables de entorno (método compatible)
        echo FULL_VERSION=!FULL_VERSION! >> "%GITHUB_ENV%"
        
    - name: Debug Version Info
      shell: cmd
      run: |
        echo FULL_VERSION: %FULL_VERSION%
        echo GITHUB_RUN_NUMBER: %GITHUB_RUN_NUMBER%

    - name: Docker Login
      uses: docker/login-action@v3
      with:
         username: ${{ secrets.DOCKER_USER }}
         password: ${{ secrets.DOCKER_PASS }}      
    - name: Build Docker Image
      shell: cmd
      run: |
         echo FULL_VERSION: %FULL_VERSION%
         docker build -t lexaguilar/taskmanagerapi:v${{ github.run_number }}  --build-arg BUILD_VERSION=%FULL_VERSION% .
   
    - name: Push Docker Image to Docker Hub
      run: |
           docker push lexaguilar/taskmanagerapi:v${{ github.run_number }}
       

  deploy:
    needs: build_and_publish  # Depende del job build_and_publish
    runs-on: self-hosted  # Se ejecuta en tu servidor self-hosted

    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
    
    - name: Pull Docker Image
      shell: cmd
      run: |
        @echo off
        echo "Obteniendo versión completa del job anterior..."
        echo FULL_VERSION: %FULL_VERSION%
        
        echo "Descargando imagen de Docker Hub..."
        docker pull lexaguilar/taskmanagerapi:v${{ github.run_number }}
        docker tag lexaguilar/taskmanagerapi:v${{ github.run_number }} taskmanagerapi:latest
    
    - name: Deploy Container
      shell: cmd
      run: |
        @echo off
        echo "Deteniendo contenedor existente..."
        docker stop taskmanagerapi || echo "No se encontró contenedor para detener"
        docker rm taskmanagerapi || echo "No se encontró contenedor para remover"
        
        echo "Iniciando nuevo contenedor..."
        docker run -d --name taskmanagerapi -p 5000:8080 ^
          --restart unless-stopped ^
          -e ASPNETCORE_ENVIRONMENT=Production ^
          taskmanagerapi:latest
        
        echo "Contenedor desplegado correctamente"
        docker ps -a
   
